@using RogueFinancialPortal.ViewModels
@model BankAccountWizardVM

@{
    ViewBag.Title = "Create Bank Accounts";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Budgets)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row justify-content-center">
    <div class="col-md-4">
        <div class="card card-body">
            <h3 class="box-title m-b-0">Create Bank Account</h3>
            <div class="row">
                <div class="col-sm-12 col-xs-12">
                    <form>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StartingBalance, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.StartingBalance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartingBalance, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.WarningBalance, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.WarningBalance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WarningBalance, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.AccountType,  htmlAttributes: new { @class = "form-control" } )
                            @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                        </div>


                        <button type="submit" class="btn btn-success waves-effect waves-light m-r-10">Create</button>
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-inverse waves-effect waves-light" })
                        @*<button type="submit" class="btn btn-inverse waves-effect waves-light">Cancel</button>*@
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <div class="container">
                    <h3>Bank Account</h3>
                    <p>
                        To create a Bank Account. Fill out the form.<br />
                        Give the account a name such as Savings, Checking, Checking two, MoneyMarket..etc.<br />
                        Add a Starting Balance, this is the starting balance in your Account.<br />
                        Add a Warning Balance, this value is used to generate an Alert/Notification when your Bank Account Balance reaches this Amount<br />
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
   
}


